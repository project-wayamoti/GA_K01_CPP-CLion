// 以下の行がないとコンパイルが通りません
#pragma comment(linker, "/subsystem:windows")
#include "utils.h"

//## 環境に応じて設定
using namespace std;

// プログラムの最初はWinMainで始める
int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {
    //##### 初期設定 #####//
    ChangeWindowMode(TRUE); // ウィンドウモード設定
    SetGraphMode(WIDTH, HEIGHT, 32); // 画面サイズ設定
    SetWaitVSyncFlag(TRUE); // 垂直同期を有効にする

    unsigned int white = GetColor(255, 255, 255);
    unsigned int red = GetColor(255, 0, 0);

    Vector2 circleCentralPos = Vector2(WIDTH / 2, HEIGHT / 2); // 中心座標
    Vector2 linesPosLeft = Vector2(0, HEIGHT / 2);             // 基準線の左座標
    Vector2 linesPosRight = Vector2(WIDTH, HEIGHT / 2);        // 基準線の右座標

    // 円の頂点座標
    CircleClass circleMAN = {
        Vector2(400, 250),
        Vector2(600, 250),
        Vector2(500, 200)
    };

    // DXライブラリ初期化処理
    if (DxLib_Init() == -1) {
        return -1; // エラーが起きたら直ちに終了
    }

    //##### メインループ（描画処理） #####//
    while (ProcessMessage() == 0) {
        ClearDrawScreen(); // 画面の更新

        if (CheckHitKey(KEY_INPUT_A) == 1) floatRotateOrientation = -0.1; // Aキーが押されたら左回転
        if (CheckHitKey(KEY_INPUT_D) == 1) floatRotateOrientation = 0.1;  // Dキーが押されたら右回転

        // Aキー、Dキーのいずれかが押されていたら上で設定された値を使って回転
        if (CheckHitKey(KEY_INPUT_A) == 1 || CheckHitKey(KEY_INPUT_D) == 1) {
            circleMAN.Rotate (circleCentralPos, floatRotateOrientation);
        }

        // 回転後に回転方向をリセット
        floatRotateOrientation = 0.0;

        // 三角形の当たり判定 & 中心座標の更新
        circleCentralPos = circleMAN.Hit(
            circleCentralPos,
            linesPosLeft,
            linesPosRight
        );

        // 三角の頂点描画 頂点分だけ回す
        for (auto & i : circleMAN.pos) {
            // 三角形の頂点の描画
            DrawCircle((int)i.x, (int)i.y, 5, white, true);
        }

        CenterPos = triangle.Hit(CenterPos, LinePosLeft, LinePosRight);

        DrawTriangle(triangle.pos[0].x, triangle.pos[0].y, triangle.pos[1].x, triangle.pos[1].y, triangle.pos[2].x, triangle.pos[2].y, white, true);
        DrawCircle(CenterPos.x, CenterPos.y, 5, white, true);
        DrawLine(LinePosLeft.x, LinePosLeft.y, LinePosRight.x, LinePosRight.y, white);

        // 画面の更新（必須）
        ScreenFlip(); // 画面を反転させる処理
        clsDx();      // デバッグログ画面をクリアする処理
    }

    DxLib_End(); // DX Libraryの使用を終了する処理
    return 0;    // ソフトを正常終了
}
